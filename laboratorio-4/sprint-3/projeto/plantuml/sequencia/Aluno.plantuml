@startuml Aluno


actor "Aluno" as Aluno
note left of Aluno #LightYellow
    Aluno
end note

participant "CarteiraController" as CarteiraController
participant "CarteiraService" as CarteiraService
participant "CarteiraRepository" as CarteiraRepository

group TrocarMoedas
    ref over Aluno,CarteiraController, CarteiraService, CarteiraRepository : AutenticarUsuario
    Aluno -> CarteiraController : Cupom:trocarVantagem(JSON<VantagemRequest>)
    activate CarteiraController
    CarteiraController -> CarteiraService : trocarVantagem(VantagemRequest)
    activate CarteiraService
    CarteiraService -> CarteiraRepository : getCarteira()
    activate CarteiraRepository
    CarteiraService -> VantagemRepository : getVantagem()
    activate VantagemRepository 
    VantagemRepository -> CarteiraService : Vantagem
    deactivate VantagemRepository
    CarteiraService -> CarteiraService : descontarSaldo()
    CarteiraService -> CarteiraService : new Cupom();
    CarteiraService -> CarteiraService : new ResgateVantagem(Cupom)
    CarteiraService -> CarteiraService : addResgateVantagem(ResgateVantagem)
    CarteiraService -> CarteiraRepository : save() 
    deactivate CarteiraRepository
    CarteiraService -> Email : Email(Cupom)
    CarteiraService --> CarteiraController : Cupom
    deactivate CarteiraService
    CarteiraController --> Aluno : Cupom
    deactivate CarteiraController
end





' --> Sincrono
' -->> Assincrono
' <-- Retorno Sincrono
' <<-- Retorno AssÃ­ncrono

@enduml