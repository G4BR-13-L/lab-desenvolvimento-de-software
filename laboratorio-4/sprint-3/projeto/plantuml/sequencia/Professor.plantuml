@startuml Professor

actor "Professor" as Professor
note left of Professor #LightYellow
    Professor
end note

participant "CarteiraController" as CarteiraController
participant "CarteiraService" as CarteiraService
participant "CarteiraRepository" as CarteiraRepository

group ConsultarSaldo
    ref over Professor,CarteiraController, CarteiraService, CarteiraRepository : AutenticarProfessor
    Professor -> CarteiraController : Saldo:ConsultarSaldo()
    activate CarteiraController
    CarteiraController -> CarteiraService : CarteiraProfessor.saldoTotal()
    activate CarteiraService
    CarteiraService -> CarteiraRepository : getSaldo();
    activate CarteiraRepository
    deactivate CarteiraRepository
    deactivate CarteiraService
    deactivate CarteiraController
end

group Transferir
    ref over Professor,CarteiraController, CarteiraService, CarteiraRepository : AutenticarProfessor
    Professor -> CarteiraController : transferir(JSON<TransacaoRequest>)
    activate CarteiraController
    CarteiraController -> CarteiraService : transferir(TransacaoRequest)
    activate CarteiraService
    CarteiraService -> CarteiraRepository : Professor.getCarteira()
    activate CarteiraRepository
    CarteiraService -> CarteiraService : ConsultarSaldo(Professor.getCarteira, TransacaoRequest)
    alt Saldo
        ...[saldo < TransacaoRequest.valor]...
        CarteiraService -> CarteiraController : "Saldo Insuficiente"
        CarteiraController -> Professor : "Saldo Insuficiente"
        ...[Saldo >= TransacaoRequest ]...
        CarteiraService -> CarteiraRepository : Aluno.getCarteira()
        CarteiraRepository --> CarteiraService : carteiraAluno 
        CarteiraService -> CarteiraService : carteiraAluno.incrementarSaldo()
        CarteiraService -> CarteiraService : carteiraProfessor.descontarSaldo()
        CarteiraService -> CarteiraService : new Comprovante();
        CarteiraService -> CarteiraRepository : save()
        CarteiraService -> CarteiraController : Comprovante
        CarteiraController -> Professor : Comprovante
    deactivate CarteiraRepository
    deactivate CarteiraService
    deactivate CarteiraController
    end
end
' --> Sincrono
' -->> Assincrono
' <-- Retorno Sincrono
' <<-- Retorno AssÃ­ncrono

@enduml